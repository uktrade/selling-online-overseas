# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-12-19 22:15
from __future__ import unicode_literals

from django.db import migrations
from django.core.management import call_command
import reversion
from django.utils import timezone
from django.core import serializers
import json


def publish_markets(apps, schema_editor):
    """
    A basic rewrite of the Market's publish method that works during a migration.
    Versions and Revisions need to be created manually, the 'Fake' models gotten from apps need to be used,
    and some extra fields (such as published) need to be removed from serialised data.
    """

    Market = apps.get_model('markets', 'Market')
    Version = apps.get_model('reversion', 'Version')
    Revision = apps.get_model('reversion', 'Revision')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    PublishedMarket = apps.get_model('markets', 'PublishedMarket')

    from django.apps.registry import Apps
    orig_get_model = Apps.get_model

    def my_get_model(self, app_label, model_name=None):
        if app_label == 'markets.publishedmarket':
            return PublishedMarket
        else:
            return orig_get_model

    Apps.get_model = my_get_model

    market_content_type = ContentType.objects.get_for_model(Market)

    for market in Market.objects.all():
        if market.published:
            # Create a Revision and a Version for the Market
            revision = Revision.objects.create(date_created=timezone.now(), user=None, comment="Published")
            version = Version.objects.create(object_id=market.id,
                                             format='json',
                                             serialized_data=serializers.serialize('json', [market]),
                                             object_repr=market.name,
                                             content_type_id=market_content_type.id,
                                             db='default',
                                             revision_id=revision.id)

            # Set the live version of the market to the Version just created
            market.live_version = revision.id
            market.save()

            # Get the serialized data from the Version
            data = version.serialized_data
            model_data = json.loads(data)

            # Change it's content type to PublishedMarket
            content_type = ContentType.objects.get_for_model(PublishedMarket)
            model_name = "{0}.{1}".format(content_type.app_label, content_type.model)
            model_data[0]['model'] = model_name
            # Pop the live_version (which isn't on the PublisheMarket model)
            model_data[0]['fields'].pop('live_version')
            # Specific to this migration, we also need to pop the published attribute, which will later be removed
            model_data[0]['fields'].pop('published')

            # Then deserialise and save the PublishedMarket object
            published_market = next(serializers.deserialize("json", json.dumps(model_data)))
            published_market.save()

    Apps.get_model = orig_get_model


class Migration(migrations.Migration):

    dependencies = [
        ('markets', '0049_published_market_model'),
    ]

    operations = [
        migrations.RunPython(publish_markets),
    ]
