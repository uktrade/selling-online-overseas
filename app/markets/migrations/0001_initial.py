# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-25 11:23
from __future__ import unicode_literals

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('symbol', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='Logo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('_encoded_data', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('web_address', models.URLField(blank=True, null=True)),
                ('web_traffic', models.CharField(blank=True, max_length=30, null=True)),
                ('customer_demographics', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('payment_terms_days', models.IntegerField()),
                ('payment_terms_days_notes',
                    models.CharField(blank=True, max_length=200, null=True, verbose_name='notes')),
                ('logistics_structure',
                    models.CharField(blank=True,
                                     choices=[('0', 'Dropshipping'), ('1', 'Warehousing'), ('2', 'Other')],
                                     max_length=1, null=True)),
                ('logistics_structure_notes',
                    models.CharField(blank=True, max_length=200, null=True, verbose_name='notes')),
                ('platform_type', models.CharField(blank=True, max_length=255, null=True)),
                ('product_type',
                    models.CharField(blank=True,
                                     choices=[('0', 'Luxury'), ('1', 'Mid rage'), ('2', 'Discount')],
                                     max_length=1, null=True)),
                ('commission', models.CharField(max_length=10)),
                ('commission_notes', models.CharField(max_length=255)),
                ('ukti_terms', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('local_bank_account_needed',
                    models.BooleanField(default=False, verbose_name='Local Bank Account Needed')),
                ('local_bank_account_needed_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('local_incorporation_needed',
                    models.BooleanField(default=False, verbose_name='Local Incorporation Needed')),
                ('local_incorporation_needed_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('exclusivity_required',
                    models.BooleanField(default=False, verbose_name='Onboarding Requirements Exclusivity')),
                ('exclusivity_required_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('translation_verbal', models.BooleanField(default=False, verbose_name='Translation Needed - Verbal')),
                ('translation_verbal_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('translation_application_process',
                    models.BooleanField(default=False,
                                        verbose_name='Translation Needed - Application process')),
                ('translation_application_process_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('translation_product_content',
                    models.BooleanField(default=False,
                                        verbose_name='Translation Needed - product content')),
                ('translation_product_content_notes', models.CharField(blank=True, max_length=255, null=True,
                                                                       verbose_name='Notes')),
                ('translation_customer_service',
                    models.BooleanField(default=False, verbose_name='Translation Needed - Customer Service')),
                ('translation_customer_service_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('payment_terms_rate_fixed',
                    models.BooleanField(default=False, verbose_name='Payment Terms - Exchange rate fixed')),
                ('payment_terms_rate_fixed_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('registration_fees',
                    models.BooleanField(default=False, verbose_name='Pricing/Fees - Registration')),
                ('registration_fees_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('fee_per_listing',
                    models.BooleanField(default=False, verbose_name='Pricing/Fees - Fee per Listing')),
                ('fee_per_listing_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('membership_fees',
                    models.BooleanField(default=False, verbose_name='Pricing/Fees - Recurring membership fees')),
                ('membership_fees_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('shipping_tracking_required',
                    models.BooleanField(default=False, verbose_name='Shipping Tracking Required')),
                ('shipping_tracking_required_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('local_return_address_required',
                    models.BooleanField(default=False, verbose_name='Local return address required?')),
                ('local_return_address_required_notes',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('countries_served', models.ManyToManyField(to='markets.Country')),
                ('currency_of_payments', models.ManyToManyField(to='markets.Currency')),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='SupportChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='UploadMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.AddField(
            model_name='market',
            name='customer_support_channels',
            field=models.ManyToManyField(related_name='markets_market_customer_related', to='markets.SupportChannel'),
        ),
        migrations.AddField(
            model_name='market',
            name='logo',
            field=models.ForeignKey(blank=True, null=True,
                                    on_delete=django.db.models.deletion.CASCADE, to='markets.Logo'),
        ),
        migrations.AddField(
            model_name='market',
            name='product_categories',
            field=models.ManyToManyField(to='markets.ProductCategory'),
        ),
        migrations.AddField(
            model_name='market',
            name='product_details_upload',
            field=models.ManyToManyField(to='markets.UploadMethod', verbose_name='Product Details upload process'),
        ),
        migrations.AddField(
            model_name='market',
            name='seller_support_channels',
            field=models.ManyToManyField(related_name='markets_market_seller_related', to='markets.SupportChannel'),
        ),
        migrations.AddField(
            model_name='country',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='markets.Region'),
        ),
    ]
